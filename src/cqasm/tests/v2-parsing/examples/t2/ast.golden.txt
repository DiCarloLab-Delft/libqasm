SUCCESS
Program( # input.cq:10:1..38:13
  version: <
    Version( # input.cq:10:1..10
      items: [
        DecimalIntegerLiteral( # input.cq:10:7..8
          value: 2
        )
        DecimalIntegerLiteral( # input.cq:10:9..10
          value: 0
        )
      ]
    )
  >
  data: <
    SemicolonSeparated( # input.cq:12:1..38:34
      elements: [
        TemplateMarker( # input.cq:12:1..27
          data: <
            ParameterDefinition( # input.cq:12:10..27
              data: <
                Colon( # input.cq:12:20..27
                  lhs: <
                    Identifier( # input.cq:12:20..21
                      name: q
                    )
                  >
                  rhs: <
                    Identifier( # input.cq:12:23..27
                      name: qref
                    )
                  >
                )
              >
            )
          >
        )
        TemplateMarker( # input.cq:13:1..32
          data: <
            ParameterDefinition( # input.cq:13:10..32
              data: <
                Colon( # input.cq:13:20..32
                  lhs: <
                    Identifier( # input.cq:13:20..27
                      name: REP_CNT
                    )
                  >
                  rhs: <
                    Identifier( # input.cq:13:29..32
                      name: int
                    )
                  >
                )
              >
            )
          >
        )
        TemplateMarker( # input.cq:14:1..33
          data: <
            ParameterDefinition( # input.cq:14:10..33
              data: <
                Colon( # input.cq:14:20..33
                  lhs: <
                    Identifier( # input.cq:14:20..28
                      name: TIME_CNT
                    )
                  >
                  rhs: <
                    Identifier( # input.cq:14:30..33
                      name: int
                    )
                  >
                )
              >
            )
          >
        )
        ParameterDefinition( # input.cq:16:1..18
          data: <
            Colon( # input.cq:16:11..18
              lhs: <
                Identifier( # input.cq:16:11..12
                  name: T
                )
              >
              rhs: <
                Identifier( # input.cq:16:14..18
                  name: frac
                )
              >
            )
          >
        )
        ParameterDefinition( # input.cq:17:1..25
          data: <
            Colon( # input.cq:17:11..25
              lhs: <
                Identifier( # input.cq:17:11..19
                  name: TIME_MIN
                )
              >
              rhs: <
                Identifier( # input.cq:17:21..25
                  name: frac
                )
              >
            )
          >
        )
        ParameterDefinition( # input.cq:18:1..26
          data: <
            Colon( # input.cq:18:11..26
              lhs: <
                Identifier( # input.cq:18:11..20
                  name: TIME_STEP
                )
              >
              rhs: <
                Identifier( # input.cq:18:22..26
                  name: frac
                )
              >
            )
          >
        )
        VariableDefinition( # input.cq:18:27..20:34
          modifiers: <
            Modifiers( # input.cq:18:27
              scope: <
                ScopeLocal( # input.cq:18:27
)
              >
              lifetime: <
                LifetimeAutomatic( # input.cq:18:27
)
              >
              implementation: <
                ImplementationAutomatic( # input.cq:18:27
)
              >
            )
          >
          data: <
            Colon( # input.cq:20:5..34
              lhs: <
                Identifier( # input.cq:20:5..9
                  name: meas
                )
              >
              rhs: <
                PlainIndex( # input.cq:20:11..34
                  data: <
                    PlainIndex( # input.cq:20:11..24
                      data: <
                        Identifier( # input.cq:20:11..15
                          name: bool
                        )
                      >
                      index: <
                        Identifier( # input.cq:20:16..23
                          name: REP_CNT
                        )
                      >
                    )
                  >
                  index: <
                    Identifier( # input.cq:20:25..33
                      name: TIME_CNT
                    )
                  >
                )
              >
            )
          >
        )
        VariableDefinition( # input.cq:20:35..22:20
          modifiers: <
            Modifiers( # input.cq:20:35
              scope: <
                ScopeLocal( # input.cq:20:35
)
              >
              lifetime: <
                LifetimeAutomatic( # input.cq:20:35
)
              >
              implementation: <
                ImplementationAutomatic( # input.cq:20:35
)
              >
            )
          >
          data: <
            Colon( # input.cq:22:5..20
              lhs: <
                Identifier( # input.cq:22:5..15
                  name: repetition
                )
              >
              rhs: <
                Identifier( # input.cq:22:17..20
                  name: int
                )
              >
            )
          >
        )
        VariableDefinition( # input.cq:22:21..23:11
          modifiers: <
            Modifiers( # input.cq:22:21
              scope: <
                ScopeLocal( # input.cq:22:21
)
              >
              lifetime: <
                LifetimeAutomatic( # input.cq:22:21
)
              >
              implementation: <
                ImplementationAutomatic( # input.cq:22:21
)
              >
            )
          >
          data: <
            Colon( # input.cq:23:5..11
              lhs: <
                Identifier( # input.cq:23:5..6
                  name: t
                )
              >
              rhs: <
                Identifier( # input.cq:23:8..11
                  name: int
                )
              >
            )
          >
        )
        VariableDefinition( # input.cq:23:12..24:15
          modifiers: <
            Modifiers( # input.cq:23:12
              scope: <
                ScopeLocal( # input.cq:23:12
)
              >
              lifetime: <
                LifetimeAutomatic( # input.cq:23:12
)
              >
              implementation: <
                ImplementationAutomatic( # input.cq:23:12
)
              >
            )
          >
          data: <
            Colon( # input.cq:24:5..15
              lhs: <
                Identifier( # input.cq:24:5..9
                  name: time
                )
              >
              rhs: <
                Identifier( # input.cq:24:11..15
                  name: frac
                )
              >
            )
          >
        )
        ForLoop( # input.cq:24:16..37:2
          modifiers: <
            Modifiers( # input.cq:24:16
              scope: <
                ScopeLocal( # input.cq:24:16
)
              >
              lifetime: <
                LifetimeAutomatic( # input.cq:24:16
)
              >
              implementation: <
                ImplementationAutomatic( # input.cq:24:16
)
              >
            )
          >
          label: -
          annotations: <
            Annotations( # input.cq:26:4
              data: []
            )
          >
          control: <
            SemicolonSeparated( # input.cq:26:5..51
              elements: [
                AssignmentOperator( # input.cq:26:5..17
                  value: <
                    DecimalIntegerLiteral( # input.cq:26:16..17
                      value: 0
                    )
                  >
                  target: <
                    Identifier( # input.cq:26:5..15
                      name: repetition
                    )
                  >
                )
                LessThanOperator( # input.cq:26:19..37
                  lhs: <
                    Identifier( # input.cq:26:19..29
                      name: repetition
                    )
                  >
                  rhs: <
                    Identifier( # input.cq:26:30..37
                      name: REP_CNT
                    )
                  >
                )
                PostIncrementOperator( # input.cq:26:39..51
                  target: <
                    Identifier( # input.cq:26:39..49
                      name: repetition
                    )
                  >
                )
              ]
            )
          >
          body: <
            Block( # input.cq:26:53..37:2
              data: <
                SemicolonSeparated( # input.cq:26:54..36:7
                  elements: [
                    ForLoop( # input.cq:26:54..36:6
                      modifiers: <
                        Modifiers( # input.cq:26:54
                          scope: <
                            ScopeLocal( # input.cq:26:54
)
                          >
                          lifetime: <
                            LifetimeAutomatic( # input.cq:26:54
)
                          >
                          implementation: <
                            ImplementationAutomatic( # input.cq:26:54
)
                          >
                        )
                      >
                      label: -
                      annotations: <
                        Annotations( # input.cq:27:8
                          data: []
                        )
                      >
                      control: <
                        SemicolonSeparated( # input.cq:27:9..59
                          elements: [
                            CommaSeparated( # input.cq:27:9..26
                              elements: [
                                AssignmentOperator( # input.cq:27:9..22
                                  value: <
                                    Identifier( # input.cq:27:14..22
                                      name: TIME_MIN
                                    )
                                  >
                                  target: <
                                    Identifier( # input.cq:27:9..13
                                      name: time
                                    )
                                  >
                                )
                                AssignmentOperator( # input.cq:27:23..26
                                  value: <
                                    DecimalIntegerLiteral( # input.cq:27:25..26
                                      value: 0
                                    )
                                  >
                                  target: <
                                    Identifier( # input.cq:27:23..24
                                      name: t
                                    )
                                  >
                                )
                              ]
                            )
                            LessThanOperator( # input.cq:27:28..38
                              lhs: <
                                Identifier( # input.cq:27:28..29
                                  name: t
                                )
                              >
                              rhs: <
                                Identifier( # input.cq:27:30..38
                                  name: TIME_CNT
                                )
                              >
                            )
                            CommaSeparated( # input.cq:27:40..59
                              elements: [
                                IncrementByOperator( # input.cq:27:40..55
                                  value: <
                                    Identifier( # input.cq:27:46..55
                                      name: TIME_STEP
                                    )
                                  >
                                  target: <
                                    Identifier( # input.cq:27:40..44
                                      name: time
                                    )
                                  >
                                )
                                PostIncrementOperator( # input.cq:27:56..59
                                  target: <
                                    Identifier( # input.cq:27:56..57
                                      name: t
                                    )
                                  >
                                )
                              ]
                            )
                          ]
                        )
                      >
                      body: <
                        Block( # input.cq:27:61..36:6
                          data: <
                            SemicolonSeparated( # input.cq:28:9..35:50
                              elements: [
                                FunctionCall( # input.cq:28:9..15
                                  function: <
                                    Identifier( # input.cq:28:9..12
                                      name: x90
                                    )
                                  >
                                  arguments: <
                                    Identifier( # input.cq:28:13..14
                                      name: q
                                    )
                                  >
                                )
                                FunctionCall( # input.cq:29:9..22
                                  function: <
                                    Identifier( # input.cq:29:9..13
                                      name: wait
                                    )
                                  >
                                  arguments: <
                                    CommaSeparated( # input.cq:29:14..21
                                      elements: [
                                        Identifier( # input.cq:29:14..15
                                          name: q
                                        )
                                        Identifier( # input.cq:29:17..21
                                          name: time
                                        )
                                      ]
                                    )
                                  >
                                )
                                FunctionCall( # input.cq:30:9..16
                                  function: <
                                    Identifier( # input.cq:30:9..13
                                      name: x180
                                    )
                                  >
                                  arguments: <
                                    Identifier( # input.cq:30:14..15
                                      name: q
                                    )
                                  >
                                )
                                FunctionCall( # input.cq:31:9..22
                                  function: <
                                    Identifier( # input.cq:31:9..13
                                      name: wait
                                    )
                                  >
                                  arguments: <
                                    CommaSeparated( # input.cq:31:14..21
                                      elements: [
                                        Identifier( # input.cq:31:14..15
                                          name: q
                                        )
                                        Identifier( # input.cq:31:17..21
                                          name: time
                                        )
                                      ]
                                    )
                                  >
                                )
                                FunctionCall( # input.cq:32:9..15
                                  function: <
                                    Identifier( # input.cq:32:9..12
                                      name: x90
                                    )
                                  >
                                  arguments: <
                                    Identifier( # input.cq:32:13..14
                                      name: q
                                    )
                                  >
                                )
                                AssignmentOperator( # input.cq:34:9..50
                                  value: <
                                    FunctionCall( # input.cq:34:31..50
                                      function: <
                                        Identifier( # input.cq:34:31..38
                                          name: measure
                                        )
                                      >
                                      arguments: <
                                        CommaSeparated( # input.cq:34:39..49
                                          elements: [
                                            Identifier( # input.cq:34:39..40
                                              name: q
                                            )
                                            Identifier( # input.cq:34:42..49
                                              name: INT_AVG
                                            )
                                          ]
                                        )
                                      >
                                    )
                                  >
                                  target: <
                                    PlainIndex( # input.cq:34:9..28
                                      data: <
                                        PlainIndex( # input.cq:34:9..25
                                          data: <
                                            Identifier( # input.cq:34:9..13
                                              name: meas
                                            )
                                          >
                                          index: <
                                            Identifier( # input.cq:34:14..24
                                              name: repetition
                                            )
                                          >
                                        )
                                      >
                                      index: <
                                        Identifier( # input.cq:34:26..27
                                          name: t
                                        )
                                      >
                                    )
                                  >
                                )
                                FunctionCall( # input.cq:35:9..17
                                  function: <
                                    Identifier( # input.cq:35:9..14
                                      name: prepz
                                    )
                                  >
                                  arguments: <
                                    Identifier( # input.cq:35:15..16
                                      name: q
                                    )
                                  >
                                )
                              ]
                            )
                          >
                        )
                      >
                    )
                  ]
                )
              >
            )
          >
        )
        ReturnStatement( # input.cq:38:1..12
          value: <
            Identifier( # input.cq:38:8..12
              name: meas
            )
          >
        )
      ]
    )
  >
)

